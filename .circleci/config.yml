version: 2
jobs:
  build:
    docker:
      - image: brettt89/silverstripe-web:7.1-platform
        environment:
          - SS_DATABASE_CLASS=MySQLPDODatabase
          - SS_DATABASE_SERVER=127.0.0.1
          - SS_DATABASE_USERNAME=root
          - SS_DATABASE_PASSWORD=ubuntu
          - SS_DATABASE_NAME=circle_test
          - SS_ENVIRONMENT_TYPE=test
          - SS_DEFAULT_ADMIN_USERNAME=admin
          - SS_DEFAULT_ADMIN_PASSWORD=password
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_ROOT_PASSWORD=ubuntu
          - MYSQL_DATABASE=circle_test
          - MYSQL_HOST=127.0.0.1

    working_directory: /var/www/html

    steps:
      - run: apt-get update && apt-get install -y apt-transport-https lsb-release netcat wget
      # Install additional requirements
      - run: composer self-update
      - checkout
      - restore_cache:
          keys:
            - v2-cache-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-cache-
      - run: composer require silverstripe/recipe-cms
      - run: composer install
      # Save all dependencies to cache
      - save_cache:
          key: v2-cache-{{ checksum "composer.lock" }}
          paths:
            - vendor
            - app
            - public
      - run: cp .circleci/circleci.env .env
      - run:
          name: Setup Scrutinizer test-reporter
          command: |
            wget https://scrutinizer-ci.com/ocular.phar

      # run tests!
      - run: until nc -z -v -w30 127.0.0.1 3306; do sleep 1; done
      - run: service apache2 restart
      - run: vendor/bin/sake dev/build flush=all skipannotation=true
      - run: vendor/bin/phpunit --coverage-clover=clover.xml --log-junit ./coverage/junit.xml -d memory_limit=512M tests
      - run:
          name: Code coverage reports
          command: |
            echo "---"
            echo "Scrutinizer:"
            echo "---"
            php ocular.phar code-coverage:upload --format=php-clover clover.xml
            echo "---"
            echo "CodeCov:"
            echo "---"
            bash <(curl -s https://codecov.io/bash) -f clover.xml
            echo "---"
      - run: vendor/bin/phpcs --standard=phpcs.xml.dist src tests/unit
      - store_test_results:
          path: /var/www/html/coverage
